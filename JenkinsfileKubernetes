node {

    stage('SCM Checkout') {
        git credentialsId: 'GIT_CREDENTIALS', url: 'https://github.com/prathapchitra/spring-boot-mongo-docker.git', branch: 'master'
    }

    stage("Maven Clean Package") {
        def mavenHome = tool name: "Maven-3.8.7", type: "maven"
        def mavenCMD = "${mavenHome}/bin/mvn"
        sh "${mavenCMD} clean package"
    }

    stage('Build Docker Image') {
        sh 'docker build -t cprathap/spring-boot-mongo .'
    }

    stage('Push Docker Image') {
        withCredentials([usernamePassword(credentialsId: 'DOCKER_HUB_PASSWORD', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
            sh '''
                echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                docker push cprathap/spring-boot-mongo
                docker logout
            '''
        }
    }

    stage("Deploy To Kubernetes Cluster") {
        kubernetesDeploy(
            configs: 'springBootMongo.yml',
            kubeconfigId: 'KUBERNATES_CONFIG',
            enableConfigSubstitution: true
        )
    }

    /*
    Alternative deploy using kubectl (if needed):
    stage("Deploy To Kubernetes Cluster (kubectl)") {
        sh 'kubectl apply -f springBootMongo.yml'
    }
    */
}
